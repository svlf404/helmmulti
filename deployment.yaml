apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-python
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-python
  template:
    metadata:
      labels:
        app: my-python
    spec:
      containers:
      - name: my-python
        image: svlf404/my-python:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8889
---
apiVersion: v1
kind: Service
metadata:
  name: my-python
spec:
  type: LoadBalancer
  selector:
    app: my-python
  ports:
  - port: 8889
    targetPort: 8889
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-prometheus
  template:
    metadata:
      labels:
        app: my-prometheus
    spec:
      containers:
      - name: my-prometheus
        image: prom/prometheus
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config
          mountPath: "/etc/prometheus/"
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: my-prometheus-conf    

---
apiVersion: v1
kind: Service
metadata:
  name: my-prometheus
spec:
  type: LoadBalancer
  selector:
    app: my-prometheus
  ports:
  - port: 9090
    targetPort: 9090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-prometheus-conf
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s 
      evaluation_interval: 15s 
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
    rule_files:        
    scrape_configs:
      - job_name: "prometheus"
        static_configs:
          - targets: ["localhost:9090"]
            labels:
              app: "prometheus"

      - job_name: "my-python"
        static_configs:
          - targets: ["my-python:8889"]
            labels:
              app: "my-python"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-grafana
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-grafana
  template:
    metadata:
      labels:
        app: my-grafana
    spec:
      containers:
      - name: my-grafana
        image: grafana/grafana
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: my-grafana
spec:
  type: LoadBalancer
  selector:
    app: my-grafana
  ports:
  - port: 3000
    targetPort: 3000